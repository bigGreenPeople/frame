package com.fj.dao;

import java.lang.reflect.ParameterizedType;
import java.lang.reflect.Type;
import java.util.List;

import org.hibernate.criterion.DetachedCriteria;
import org.springframework.orm.hibernate5.support.HibernateDaoSupport;

import com.fj.domain.Customer;
import com.fj.domain.PageBean;
@SuppressWarnings("all")
public class CustomerDaoImp extends BaseDaoImp<Customer> implements CustomerDao {
	
	/*//添加客户
	@Override
	public void add(Customer customer) {
		// TODO Auto-generated method stub
		this.getHibernateTemplate().save(customer);
	}
	//查询所有客户
	@Override
	public List<Customer> listCustomer() {
		// TODO Auto-generated method stub
		List<Customer> list = (List<Customer>) this.getHibernateTemplate().find("from Customer");
		return list;
	}
	//修改客户
	@Override
	public void updCustomer(Customer customer) {
		// TODO Auto-generated method stub
		this.getHibernateTemplate().update(customer);
	}
	//删除客户
	@Override
	public void delCustomer(int cid) {
		// TODO Auto-generated method stub
		//先查询再删除
		Customer customer = this.getHibernateTemplate().get(Customer.class, cid);
		this.getHibernateTemplate().delete(customer);
	}*/
	//分页列表
	@Override
	public List<Customer> listCustomerPage(int pageNow,int pageSize){
		// TODO Auto-generated method stub
		//这里我们使用离线查询
		//得到离线对象
		DetachedCriteria criteria = DetachedCriteria.forClass(Customer.class);
		//得到分页后的
		List<Customer> list = (List<Customer>) this.getHibernateTemplate().findByCriteria(criteria, pageNow, pageSize);
		
		return list;
	}
	//得到记录
	@Override
	public int getCount(int currentPage) {
		// TODO Auto-generated method stub
		List<Long> list = (List<Long>) this.getHibernateTemplate().find("SELECT COUNT(*) FROM Customer");
		//如果不为空
		if(list.size()!=0 && list!=null){
			//返回我们的记录数
			return list.get(0).intValue();
		}
		return 0;
	}
	/*//查询单个用户
	@Override
	public Customer getCustomerByID(int cid) {
		// TODO Auto-generated method stub
		Customer customer = this.getHibernateTemplate().get(Customer.class, cid);
		//如果不为空的话
		if(customer!=null){
			return customer;
		}
		return null;
	}*/
	//查找用户
	@Override
	public List<Customer> findCustomer(String custName) {
		// TODO Auto-generated method stub
		
		List<Customer> list = (List<Customer>) this.getHibernateTemplate().
				find("from Customer where custName like ?", "%"+custName+"%");
		
		return list;
	}
}
