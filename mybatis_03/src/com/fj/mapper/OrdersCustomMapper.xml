<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fj.mapper.OrdersCustomMapper">
	<!-- 定义一对一的关系resultMap -->
	<resultMap type="com.fj.po.Orders" id="userordermap">
		<id column="id" property="id"/>
		<result column="user_id" property="user_id"/>
		<result column="number" property="number"/>
		<result column="createtime" property="createtime"/>
		<result column="note" property="note"/>
		<!-- 配置user的映射关系 -->
		<association property="user" javaType="com.fj.po.User">
			<id column="user_id" property="id"/>
			<result column="username" property="username"/>
			<result column="sex" property="sex"/>
			<result column="birthday" property="birthday"/>
			<result column="address" property="address"/>
		</association>
	</resultMap>
	<!-- 多对一的结果映射关系配置 -->
	<resultMap type="com.fj.po.Orders" id="userorderdetailmap" extends="userordermap">
		<collection property="orderdetails" ofType="com.fj.po.Orderdetail">
			<id column="orderdetail_id" property="id"/>
			<result column="id" property="orders_id"/>
			<result column="items_id" property="items_id"/>
			<result column="items_num" property="items_num"/>
		</collection>
	</resultMap>
	
	<!--配置多对多的关系  -->
	<resultMap type="com.fj.po.User" id="userOrderListResultMap">
		<id column="user_id" property="id"/>
		<result column="username" property="username"/>
		<result column="sex" property="sex"/>
		<result column="birthday" property="birthday"/>
		<result column="address" property="address"/>
		<!-- 配置orders -->
		<collection property="orders" ofType="com.fj.po.Orders">
			<id column="id" property="id"/>
			<result column="user_id" property="user_id"/>
			<result column="number" property="number"/>
			<result column="createtime" property="createtime"/>
			<result column="note" property="note"/>
			<!-- 配置orderdetails -->
			<collection property="orderdetails" ofType="com.fj.po.Orderdetail">
				<id column="orderdetail_id" property="id"/>
				<result column="id" property="orders_id"/>
				<result column="items_id" property="items_id"/>
				<result column="items_num" property="items_num"/>
				<!--配置items  -->
				<association property="items" javaType="com.fj.po.Items">
					<id column="items_id" property="id"/>
					<result column="items_createtime" property="createtime"/>
					<result column="items_detail" property="detail"/>
					<result column="items_name" property="name"/>
					<result column="items_pic" property="pic"/>
					<result column="items_price" property="price"/>
				</association>
			</collection>
		</collection>
	</resultMap>
	
	<select id="findOrdersList" resultType="ordersCustom">
		SELECT orders.*,user.username,
		  user.address,
		  user.birthday,
		  user.sex
		 FROM USER,orders WHERE USER.id=orders.user_id;
	</select>
	<!-- 使用resultMap来查询一对一的关系 -->
	<select id="findOrdersListMap" resultMap="userordermap">
		SELECT orders.*,user.username,
		  user.address,
		  user.birthday,
		  user.sex
		 FROM USER,orders WHERE USER.id=orders.user_id;
	</select>
	
	<!-- 显示订单详情和用户的关系也就是多对一 -->
	<select id="findOrdersDetailList" resultMap="userorderdetailmap">
		SELECT 
		  orders.*,
		  user.username,
		  user.address,
		  orderdetail.id orderdetail_id,
		  orderdetail.items_id,
		  orderdetail.items_num
		FROM
		  orders,USER,orderdetail
		WHERE orders.user_id = user.id 
		AND orders.id = orderdetail.orders_id
	</select>
	
	<!-- 显示订单详情和用户的关系也就是多对一 -->
	<select id="findOrdersDetailListType" resultType="com.fj.po.OrdersAndOrdersDetail">
		SELECT 
		  orders.*,
		  user.username,
		  user.address,
		  orderdetail.id orderdetail_id,
		  orderdetail.items_id,
		  orderdetail.items_num
		FROM
		  orders,USER,orderdetail
		WHERE orders.user_id = user.id 
		AND orders.id = orderdetail.orders_id
	</select>
	
	<!-- 显示用户与商品的的关系也就是多对多 -->
	<select id="findOrderListResultMap" resultMap="userOrderListResultMap">
		SELECT
			orders.*, 
			USER .username,
			USER .address,
			orderdetail.id orderdetail_id,
			orderdetail.items_id,
			orderdetail.items_num,
			items.name items_name,
			items.detail items_detail
		FROM
			orders,
			USER,
			orderdetail,
			items
		WHERE
			orders.user_id = USER .id
		AND orders.id = orderdetail.orders_id
		AND orderdetail.items_id = items.id

	</select>
</mapper>
